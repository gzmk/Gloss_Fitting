% flip the camera handedness to match Blender-Collada output to Mitsuba and PBRT
Collada {
    Camera:scale|sid=scale = -1 1 1
    % move the camera for each condition
    % Camera:translate|sid=location = (xCam) (yCam) 0
    Camera:translate|sid=location = 0 0 0.1 
    % Camera:rotate|sid=rotationZ = 0 0 1 (zRotCam)
    % Camera:rotate|sid=rotationY = 0 1 0 0
    % Camera:rotate|sid=rotationX = 1 0 0 80
    % move and resize the sphere to match to photo
    % Sphere:translate|sid=location = (locx) (locy) 0
    Sphere:scale|sid=scale = 2.2 2.2 2.2
    
}

% materials
Generic {
	Material-material:material:ward
    Material-material:alphaU.float = (alphau)
    Material-material:alphaV.float = 0.2
	Material-material:diffuseReflectance.spectrum = (ro_d)
    Material-material:specularReflectance.spectrum = (ro_s)
    % Material-material:diffuseReflectance.spectrum = 300:0.1 800:0.1
    % Material-material:specularReflectance.spectrum = 300:0.4 800:0.4
    % Material-material:diffuseReflectance.spectrum = 0.56
    % Material-material:specularReflectance.spectrum = 0.56
    % Material-material:diffuseAmount.float = (ro_d)
    % Material-material:specularAmount.float = (ro_s)

}


% lights
Generic {
	Point-light:light:point
	% Point-light:intensity.spectrum = (lightColor)
    % Point-light:intensity.spectrum = D65.spd
    Point-light:intensity.spectrum = 300:1 800:1
    %Point-light:intensity.spectrum = 1

}

Mitsuba {
    % use the path integrator with lots of samples
    integrator:integrator:path
    Camera-camera_sampler:sampleCount.integer = 64
}